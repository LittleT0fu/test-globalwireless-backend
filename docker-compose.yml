services:
  # Node Server
  node-server: # container name (like --name)
    build: . # dockerfile path
    ports: # port mapping
      - 3000:3000 # host:container port mapping
    working_dir: /app # working directory
    restart: unless-stopped # restart policy
    depends_on:
      - mysql
    env_file: # env file
      - .env # .env file path
    environment:
      # Database Local
      - DATABASE_URL=${DATABASE_URL}
      - NODE_ENV=${NODE_ENV}
      - PORT=${PORT}
      # JWT
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN}
      # Rate Limit
      - RATE_LIMIT_WINDOW_MS=${RATE_LIMIT_WINDOW_MS}
      - RATE_LIMIT_MAX_REQUESTS=${RATE_LIMIT_MAX_REQUESTS}
      # Bcrypt
      - BCRYPT_ROUNDS=${BCRYPT_ROUNDS}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS}
    command: >
      sh -c "
        npx prisma generate &&
        npx prisma db push &&
        npx prisma db seed &&
        npm run dev
      "

  # MySQL
  mysql:
    image: mysql:8.0
    container_name: global_wireless_test
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: global_wireless_test
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: global_wireless_test_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_USER: root
      PMA_PASSWORD: root
    ports:
      - "8080:80"
    depends_on:
      - mysql 

volumes:
  mysql_data: